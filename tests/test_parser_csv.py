from decimal import Decimal
from app.parser_csv import (
    parse_str_to_number,
    read_csv_file,
    general_csv,
    import_export_csv,
)


# Test read_csv_file
def test_read_csv_file():
    result = read_csv_file("tests/fixtures/general_csv.csv", delimiter=";")
    assert len(result) == 4
    assert result[0] == {
        "id": "1",
        "control": "VINHO DE MESA",
        "produto": "VINHO DE MESA",
        "1970": "217208604",
        "1971": "154264651",
        "1972": "146953297",
        "1973": "116710345",
        "1974": "193875345",
        "1975": "177401209",
        "1976": "144565438",
        "1977": "195359778",
        "1978": "200053669",
        "1979": "211252982",
        "1980": "130308185",
        "1981": "186129728",
        "1982": "234754564",
        "1983": "120261544",
        "1984": "177680331",
        "1985": "275338955",
        "1986": "157711522",
        "1987": "150467184",
        "1988": "244791058",
        "1989": "181801961",
        "1990": "210548199",
        "1991": "126768254",
        "1992": "163248419",
        "1993": "171754995",
        "1994": "202073263",
        "1995": "214788304",
        "1996": "152917771",
        "1997": "182816047",
        "1998": "150814943",
        "1999": "226520776",
        "2000": "273025576",
        "2001": "228932458",
        "2002": "259589740",
        "2003": "202545724",
        "2004": "313962284",
        "2005": "226080432",
        "2006": "185100887",
        "2007": "275287908",
        "2008": "287506811",
        "2009": "205418206",
        "2010": "195267980",
        "2011": "257840749",
        "2012": "212777037",
        "2013": "196904222",
        "2014": "196173123",
        "2015": "210308560",
        "2016": "86319015",
        "2017": "255015187",
        "2018": "218375636",
        "2019": "144629737",
        "2020": "124200414",
        "2021": "173899995",
        "2022": "195031611",
        "2023": "169762429",
    }
    assert result[1] == {
        "id": "2",
        "control": "vm_Tinto",
        "produto": "Tinto",
        "1970": "174224052",
        "1971": "121133369",
        "1972": "118180926",
        "1973": "88589019",
        "1974": "146544484",
        "1975": "144274134",
        "1976": "118360170",
        "1977": "154801826",
        "1978": "162917363",
        "1979": "154736439",
        "1980": "101659755",
        "1981": "134156175",
        "1982": "183349460",
        "1983": "87080528",
        "1984": "119615028",
        "1985": "216732390",
        "1986": "118766694",
        "1987": "97841160",
        "1988": "173747942",
        "1989": "136931173",
        "1990": "154359897",
        "1991": "90320836",
        "1992": "118638894",
        "1993": "125172218",
        "1994": "161479717",
        "1995": "167174017",
        "1996": "115896909",
        "1997": "116458841",
        "1998": "102127865",
        "1999": "168149414",
        "2000": "208242670",
        "2001": "175267437",
        "2002": "215892333",
        "2003": "155513687",
        "2004": "254172425",
        "2005": "180698666",
        "2006": "149552555",
        "2007": "228156220",
        "2008": "241057928",
        "2009": "164143454",
        "2010": "157290088",
        "2011": "210113358",
        "2012": "175875432",
        "2013": "163111797",
        "2014": "157776363",
        "2015": "169811472",
        "2016": "75279191",
        "2017": "1365957",
        "2018": "188270142",
        "2019": "121045115",
        "2020": "103916391",
        "2021": "146075996",
        "2022": "162844214",
        "2023": "139320884",
    }


# Test general_csv
def test_general_csv():
    expected = [
        {
            "item": "VINHO DE MESA",
            "quantity": 169762429,
            "year": 2023,
            "sub_items": [
                {"name": "Tinto", "quantity": 139320884},
                {"name": "Branco", "quantity": 27910299},
                {"name": "Rosado", "quantity": 2531246},
            ],
        }
    ]
    result = general_csv(
        "tests/fixtures/general_csv.csv", year=2023, key="produto", delimiter=";"
    )
    assert result == expected


# Test import_export_csv
def test_import_export_csv():
    expected = [
        {"country": "África do Sul", "quantity": 2, "amount": 44, "year": 2023},
        {"country": "Alemanha", "quantity": 162, "amount": 1542, "year": 2023},
    ]

    result = import_export_csv(
        "tests/fixtures/import_export_csv.csv", year=2023, delimiter="\t"
    )
    assert result == expected


def test_parse_str_to_number_int():
    assert parse_str_to_number("123") == 123
    assert parse_str_to_number(456) == 456
    assert parse_str_to_number("0") == 0
    assert parse_str_to_number("-789") == -789


def test_parse_str_to_number_with_commas():
    assert parse_str_to_number("1,234") == 1234
    assert parse_str_to_number("12,345,678") == 12345678
    assert parse_str_to_number("-9,876") == -9876


def test_parse_str_to_number_invalid():
    assert parse_str_to_number("") == 0
    assert parse_str_to_number(None) == 0
    assert parse_str_to_number("*") == 0
    assert parse_str_to_number("nd") == 0
